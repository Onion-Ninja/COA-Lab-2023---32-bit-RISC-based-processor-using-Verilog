// 0. addi R1, R0, 10
000001_00000_00001_0000000000001010
// 4. addi R2, R0, 25
000001_00000_00010_0000000000011001
// 8. sub R3,R1,R2
000000_00001_00010_00011_00000000001 
// 12. bmi R3, swap (+8 offset)
001101_00011_00000000000000001000
// 16. br loop (+20 offset)
001100_00000_000000000000000010100

//swap:
//20. move R3, R2
010100_00010_00011_00000_00000000000
//24. move R2, R1
010100_00001_00010_00000_00000000000
//28. move R1, R3
010100_00011_00001_00000_00000000000
//32. br loop (+4 offset)
001100_00000_000000000000000000100

//loop
// 36.  sub R4, R1, R2 
000000_00001_00010_00100_00000000001
// 40. move R1, R2 
010100_00010_00001_00000_00000000000
// 44. move R2, R4 
010100_00100_00010_00000_00000000000
// 48. bz R2, output (+16 offset)
001111_00010_000000000000000010000
// 52. sub R5, R1, R2
000000_00001_00010_00101_00000000001
// 56. bmi R5, swap (-36 offset)
001101_00101_111111111111111011100
// 60. br loop (-24 offset)
001100_00000_111111111111111101000

//output
// 64. halt
010101_00000000000000000000000000
